<head>
    <script src="/socket.io/socket.io.js"></script>
    <link rel="stylesheet" href="/public/css/partialsCss/topNavigation.css">
</head>

<body>
    <div class="top_navigation">
        <div class="navbar_logo">
            <a href="/space" id="logo">Task Hub</a>
        </div>

        <div class="navbar_options">
            <div class="search_container">
                <form class="search_formTop">
                    <i class="fa-solid fa-magnifying-glass" id="search_icon"></i>
                    <input class="searchInputTop" type="search" placeholder="ค้นหา" aria-label="Search" maxlength="500">
                </form>

                <div class="mainSearchResult" style="display: none;">
                    <ul class="resultList">
                        <li class="resultItem">

                        </li>
                    </ul>
                </div>
            </div>

            <div class="navbar_nav">
                <div class="nav_item" data-label="ช่วยเหลือ">
                    <a class="nav_link" aria-current="page" href="/complaint">
                        <i class="fa-solid fa-circle-info" id="iconLink"></i>
                    </a>
                </div>
                <div class="nav_item" data-label="แจ้งเตือน" id="notiSection">
                    <a class="nav_link" aria-current="page" id="noti-dropdown" role="button" data-bs-toggle="dropdown"
                        aria-expanded="false">
                        <i class="fa-solid fa-bell" id="iconLink"></i>
                    </a>
                    <div class="notiNew">
                        <span class="count">0</span>
                    </div>

                    <div class="allNoti">
                        <div class="notiTop">
                            <span class="notiText">
                                การแจ้งเตือน
                            </span>
                            <span class="closeNoti">
                                <span style="font-size: 14px; 
                                             font-weight: 300;
                                             color: gray;">แสดงเฉพาะที่ยังไม่อ่าน</span>

                                <input type="checkbox" hidden="hidden" id="username">
                                <label class="switch" for="username"></label>
                            </span>
                        </div>

                        <div class="divindLine"></div>
                        <div class="notiItem Messages" style="display: none;"></div>
                        <div class="notiItem Mentions" style="display: none;"></div>
                    </div>
                </div>

                <div class="nav_itemDropdown">
                    <div class="linkWrap">
                        <a class="nav_link dropdown-toggle" id="profile-dropdown" role="button"
                            data-bs-toggle="dropdown" aria-expanded="false">
                            <img src="<%= user.profileImage %><%= user.profileImage %> || /img/profileImage/Profile.jpeg"
                                alt="<%= user.username %>'s Profile Image"
                                onerror="this.onerror=null; this.src='/public/img/profileImage/userDefalt.jpg';"
                                id="userImg">
                        </a>
                    </div>

                    <div class="dropdown_menu">
                        <div class="menuItem">
                            <a class="menuItemLink" href="#">
                                <i class="fa-solid fa-address-card" id="linkIcon"></i>
                                <span id="linkText">
                                    โปรไฟล์
                                </span>
                            </a>
                        </div>
                        <div class="menuItem">
                            <a class="menuItemLink" href="#">
                                <i class="fa-solid fa-gear" id="linkIcon"></i>
                                <span id="linkText">
                                    การตั้งค่า
                                </span>
                            </a>
                        </div>
                        <div class="menuItem">
                            <a class="menuItemLink" href="#">
                                <i class="fa-solid fa-trash" id="linkIcon"></i>
                                <span id="linkText">
                                    ถังขยะ
                                </span>
                            </a>
                        </div>

                        <div class="divindLine"></div>

                        <div class="menuItem">
                            <a class="menuItemLink" href="/logout" style="color: red;">
                                <i class="fa-solid fa-arrow-right-from-bracket" style="color: red;" id="linkIcon"></i>
                                <span id="linkText" style="color: red;">
                                    ออกจากระบบ
                                </span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</body>
<script>
    // more setting
    window.addEventListener('DOMContentLoaded', () => {
        const profileDropdown = document.getElementById('profile-dropdown');
        const dropdownMenu = document.querySelector('.dropdown_menu');

        // Toggle dropdown visibility when clicking on the profile image
        profileDropdown.addEventListener('click', (event) => {
            event.stopPropagation(); // Prevent the click from bubbling up
            dropdownMenu.classList.toggle('show');
        });

        // Close the dropdown when clicking outside of it
        document.addEventListener('click', () => {
            if (dropdownMenu.classList.contains('show')) {
                dropdownMenu.classList.remove('show');
            }
        });

        // Prevent the dropdown from closing when clicking inside it
        dropdownMenu.addEventListener('click', (event) => {
            event.stopPropagation();
        });
    });

    // notification
    window.addEventListener('DOMContentLoaded', () => {
        const profileDropdown = document.getElementById('noti-dropdown');
        const dropdownMenu = document.querySelector('.allNoti');

        // Toggle dropdown visibility when clicking on the profile image
        profileDropdown.addEventListener('click', (event) => {
            event.stopPropagation(); // Prevent the click from bubbling up
            dropdownMenu.classList.toggle('show');
        });

        // Close the dropdown when clicking outside of it
        document.addEventListener('click', () => {
            if (dropdownMenu.classList.contains('show')) {
                dropdownMenu.classList.remove('show');
            }
        });

        // Prevent the dropdown from closing when clicking inside it
        dropdownMenu.addEventListener('click', (event) => {
            event.stopPropagation();
        });
    });
</script>
<script>
    const socket = io(); // ประกาศ socket แค่ครั้งเดียว

    function updateUnreadMessagesUI(data) {
        const notiContainer = document.querySelector('.notiItem.Messages');
        const notiCount = document.querySelector('.notiNew .count');

        // ล้างการแจ้งเตือนเก่า
        notiContainer.innerHTML = '';

        // ตรวจสอบว่า data เป็นอาร์เรย์และมีข้อมูล
        if (Array.isArray(data)) {
            // กรองเฉพาะข้อความที่ยังไม่ได้อ่าน
            const unreadMessages = data.filter(item => item.unreadCount > 0);

            if (unreadMessages.length > 0) {
                // แสดงการแจ้งเตือน
                notiContainer.style.display = 'block';

                unreadMessages.forEach(item => {
                    const notiItem = document.createElement('div');
                    notiItem.classList.add('notiItem', 'notRead');
                    notiItem.innerHTML = `
              <div class="notiConteneWarp">
                <div class="notiContent">
                  <span class="firstLine">
                    คุณมีข้อความที่ยังไม่ได้อ่านในโปรเจกต์
                    <a href="/space/item/${item.spaceId}/chat" style="font-weight: 400;">${item.projectName}</a>
                  </span>
                  <span class="secondLine">
                    จำนวน: ${item.unreadCount} ข้อความ
                  </span>
                </div>
              </div>
            `;
                    notiContainer.prepend(notiItem);
                });

                // อัปเดตจำนวนการแจ้งเตือน
                notiCount.textContent = unreadMessages.length;
            } else {
                // ซ่อนการแจ้งเตือนถ้าไม่มีข้อความที่ยังไม่ได้อ่าน
                notiContainer.style.display = 'none';
                notiCount.textContent = 0;
            }
        } else {
            console.error('Data is not an array:', data);
        }
    }

    // ฟังก์ชันอัปเดต UI การแจ้งเตือนสำหรับ Mention
    function updateMentionsUI(data) {
        const notiContainer = document.querySelector('.notiItem.Mentions');
        const notiCount = document.querySelector('.notiNew .count');

        // ล้างการแจ้งเตือนเก่า
        notiContainer.innerHTML = '';

        // ตรวจสอบว่า data เป็นอาร์เรย์
        if (Array.isArray(data)) {
            // แสดงการแจ้งเตือนแต่ละรายการ
            data.forEach(item => {
                const notiItem = document.createElement('div');
                notiItem.classList.add('notiItem', 'notRead');
                notiItem.innerHTML = `
                <div class="notiConteneWarp">
                    <div class="notiContent">
                        <span class="firstLine">
                            คุณถูก mention โดย ${item.mentionedBy} ในโปรเจกต์
                            <a href="${item.link}" style="font-weight: 400;">${item.projectName}</a>
                        </span>
                        <span class="secondLine">
                            ข้อความ: ${item.message}
                        </span>
                    </div>
                </div>
            `;
                notiContainer.prepend(notiItem);
            });

            // แสดง container ถ้ามีการแจ้งเตือน
            if (data.length > 0) {
                notiContainer.style.display = 'block';
            } else {
                notiContainer.style.display = 'none';
            }

            // อัปเดตจำนวนการแจ้งเตือน
            notiCount.textContent = data.length;
        } else {
            console.error('Data is not an array:', data);
        }
    }
    // ฟังก์ชันดึงข้อมูลข้อความที่ยังไม่ได้อ่าน
    async function fetchUnreadMessages() {
        try {
            const response = await fetch('/space/item/unread-messages');
            const data = await response.json();
            if (data.success && Array.isArray(data.unreadCounts)) {
                updateUnreadMessagesUI(data.unreadCounts);
            } else {
                console.error('Invalid data format:', data);
            }
        } catch (error) {
            console.error('Error fetching unread messages:', error);
        }
    }

    // ฟังก์ชันดึงข้อมูล mentions ที่ยังไม่ได้อ่าน
    async function fetchUnreadMentions() {
        try {
            const response = await fetch('/space/item/unread-mentions');
            const data = await response.json();
            if (data.success) {
                updateMentionsUI(data.unreadMentions); // เรียกใช้ฟังก์ชันอัปเดต UI
            } else {
                console.error('Invalid data format:', data);
            }
        } catch (error) {
            console.error('Error fetching unread mentions:', error);
        }
    }
    // ใช้ Socket.IO รับอัปเดตแบบเรียลไทม์สำหรับ Unread Messages
    socket.on('new unread message', () => {
        fetchUnreadMessages(); // รีเฟรชการแจ้งเตือนอัตโนมัติ
    });

    // ใช้ Socket.IO รับอัปเดตแบบเรียลไทม์สำหรับ Mention
    socket.on('new mention', (data) => {
        console.log('New mention received:', data); // Log ข้อมูลการ mention
        fetchUnreadMentions();
    });

    // ดึงข้อมูลครั้งแรกเมื่อโหลดหน้า
    document.addEventListener('DOMContentLoaded', () => {
        fetchUnreadMentions();
        fetchUnreadMessages();
    });

</script>